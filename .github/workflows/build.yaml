name: üèóÔ∏è Build image on push
on:
  push:
    branches: ['main']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
    - name: üöö Get latest code
      uses: actions/checkout@v4

    - name: Log into the Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # - name: Restore cached dependencies
    #   id: cache-pip
    #   uses: actions/cache@v3
    #   with:
    #     path: |
    #       ~/.cache/pip
    #     key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
    #     restore-keys: ${{ runner.os }}-pip-

    # - if: ${{ steps.cache-pip.outputs.cache-hit != 'true' }}
    #   name: Set up Python
    #   uses: actions/setup-python@v5
    #   with:
    #     python-version: '3.11'
    #     cache: 'pip'

    # - if: ${{ steps.cache-pip.outputs.cache-hit != 'true' }}
    #   name: Install dependencies
    #   run: |
    #     python -m venv venv
    #     source venv/bin/activate
    #     pip install --no-cache-dir -r requirements.txt

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}

    - name: üî® Build and publish image
      id: push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true